{"version":3,"sources":["../../src/shp-loader.js"],"names":["VERSION","SHP_MAGIC_NUMBER","SHPWorkerLoader","id","name","category","version","extensions","mimeTypes","tests","Uint8Array","buffer","options","shp","_maxDimensions","SHPLoader","parse","arrayBuffer","parseSync","parseSHP","parseInBatches","parseSHPInBatches"],"mappings":";;;;;;;;;;;;;;;AAEA;;;;;;AAIA,IAAMA,OAAO,GAAG,oBAAuB,WAAvB,cAAmD,QAAnE;AAEO,IAAMC,gBAAgB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAzB;;AAGA,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,EAAE,EAAE,KADyB;AAE7BC,EAAAA,IAAI,EAAE,KAFuB;AAG7BC,EAAAA,QAAQ,EAAE,UAHmB;AAI7BC,EAAAA,OAAO,EAAEN,OAJoB;AAK7BO,EAAAA,UAAU,EAAE,CAAC,KAAD,CALiB;AAM7BC,EAAAA,SAAS,EAAE,CAAC,0BAAD,CANkB;AAQ7BC,EAAAA,KAAK,EAAE,CAAC,IAAIC,UAAJ,CAAeT,gBAAf,EAAiCU,MAAlC,CARsB;AAS7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AACHC,MAAAA,cAAc,EAAE;AADb;AADE;AAToB,CAAxB;;;AAkBA,IAAMC,SAAS,mCACjBb,eADiB;AAEpBc,EAAAA,KAAK;AAAA,iFAAE,iBAAOC,WAAP,EAAoBL,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAgC,wBAASK,WAAT,EAAsBL,OAAtB,CAAhC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAFe;AAGpBM,EAAAA,SAAS,EAAEC,kBAHS;AAIpBC,EAAAA,cAAc,EAAEC;AAJI,EAAf","sourcesContent":["/** @typedef {import('@loaders.gl/loader-utils').LoaderObject} LoaderObject */\n/** @typedef {import('@loaders.gl/loader-utils').WorkerLoaderObject} WorkerLoaderObject */\nimport {parseSHP, parseSHPInBatches} from './lib/parsers/parse-shp';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport const SHP_MAGIC_NUMBER = [0x00, 0x00, 0x27, 0x0a];\n\n/** @type {WorkerLoaderObject} */\nexport const SHPWorkerLoader = {\n  id: 'shp',\n  name: 'SHP',\n  category: 'geometry',\n  version: VERSION,\n  extensions: ['shp'],\n  mimeTypes: ['application/octet-stream'],\n  // ISSUE: This also identifies SHX files, which are identical to SHP for the first 100 bytes...\n  tests: [new Uint8Array(SHP_MAGIC_NUMBER).buffer],\n  options: {\n    shp: {\n      _maxDimensions: 4\n      // workerUrl: `https://unpkg.com/@loaders.gl/shapefile@${VERSION}/dist/shp-loader.worker.js`\n    }\n  }\n};\n\n/** @type {LoaderObject} */\nexport const SHPLoader = {\n  ...SHPWorkerLoader,\n  parse: async (arrayBuffer, options) => parseSHP(arrayBuffer, options),\n  parseSync: parseSHP,\n  parseInBatches: parseSHPInBatches\n};\n"],"file":"shp-loader.js"}