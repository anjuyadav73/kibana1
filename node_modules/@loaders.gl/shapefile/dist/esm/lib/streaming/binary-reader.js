import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";

var BinaryReader = function () {
  function BinaryReader(arrayBuffer) {
    _classCallCheck(this, BinaryReader);

    this.offset = 0;
    this.arrayBuffer = arrayBuffer;
  }

  _createClass(BinaryReader, [{
    key: "hasAvailableBytes",
    value: function hasAvailableBytes(bytes) {
      return this.arrayBuffer.byteLength - this.offset >= bytes;
    }
  }, {
    key: "getDataView",
    value: function getDataView(bytes) {
      if (bytes && !this.hasAvailableBytes(bytes)) {
        throw new Error('binary data exhausted');
      }

      var dataView = bytes ? new DataView(this.arrayBuffer, this.offset, bytes) : new DataView(this.arrayBuffer, this.offset);
      this.offset += bytes;
      return dataView;
    }
  }, {
    key: "skip",
    value: function skip(bytes) {
      this.offset += bytes;
    }
  }, {
    key: "rewind",
    value: function rewind(bytes) {
      this.offset -= bytes;
    }
  }]);

  return BinaryReader;
}();

export { BinaryReader as default };
//# sourceMappingURL=binary-reader.js.map