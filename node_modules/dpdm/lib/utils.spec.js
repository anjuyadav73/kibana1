"use strict";
/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-07-17 18:45:47
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var path_1 = require("path");
var utils_1 = require("./utils");
describe('util', function () {
    it('should resolve correctly', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var ext, local, index, pkg, deepPkg, notFound;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    ext = ['', '.js', '.jsx', '.ts', '.tsx', '.json'];
                    return [4 /*yield*/, utils_1.simpleResolver(__dirname, './bin/dpdm', ext)];
                case 1:
                    local = _a.sent();
                    return [4 /*yield*/, utils_1.simpleResolver(__dirname, '.', ext)];
                case 2:
                    index = _a.sent();
                    return [4 /*yield*/, utils_1.simpleResolver(__dirname, 'base', ext)];
                case 3:
                    pkg = _a.sent();
                    return [4 /*yield*/, utils_1.simpleResolver(path_1.dirname(pkg), 'define-property', ext)];
                case 4:
                    deepPkg = _a.sent();
                    return [4 /*yield*/, utils_1.simpleResolver(__dirname, './utils.tsx', ext)];
                case 5:
                    notFound = _a.sent();
                    expect([local, index, pkg, deepPkg, notFound]).toEqual([
                        path_1.join(__dirname, 'bin/dpdm.ts'),
                        path_1.join(__dirname, 'index.ts'),
                        path_1.join(__dirname, '../node_modules/base/index.js'),
                        path_1.join(__dirname, '../node_modules/base/node_modules/define-property/index.js'),
                        null,
                    ]);
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=utils.spec.js.map