import { ValidConfigOptions } from '../../options/options';
import { SourcePullRequestNode, SourceCommitWithTargetPullRequest } from './parseSourceCommit';
export declare type PullRequestState = 'OPEN' | 'CLOSED' | 'MERGED' | 'NOT_CREATED';
declare type CreatedPullRequest = {
    url: string;
    number: number;
    branch: string;
    state: PullRequestState;
    mergeCommit?: {
        sha: string;
        message: string;
    };
};
declare type TargetBranchWithLabel = {
    labelRegex: string;
    branch: string;
    label: string;
    isSourceBranch: boolean;
};
export declare type TargetPullRequest = (CreatedPullRequest & Partial<TargetBranchWithLabel>) | ((TargetBranchWithLabel & Partial<CreatedPullRequest>) & {
    state: PullRequestState;
});
export declare function getSourcePullRequest(sourceCommit: SourceCommitWithTargetPullRequest): SourcePullRequestNode | undefined;
export declare function getPullRequestStates({ sourceCommit, branchLabelMapping, }: {
    sourceCommit: SourceCommitWithTargetPullRequest;
    branchLabelMapping: ValidConfigOptions['branchLabelMapping'];
}): TargetPullRequest[];
export declare function getTargetBranchFromLabel({ branchLabelMapping, label, }: {
    branchLabelMapping: NonNullable<ValidConfigOptions['branchLabelMapping']>;
    label: string;
}): {
    targetBranch: string;
    labelRegex: string;
} | undefined;
export {};
