"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTargetPRLabels = void 0;
const lodash_1 = require("lodash");
const filterEmpty_1 = require("../../utils/filterEmpty");
const getSourceBranchFromCommits_1 = require("../getSourceBranchFromCommits");
const logger_1 = require("../logger");
function getTargetPRLabels({ interactive, targetPRLabels, commits, targetBranch, }) {
    const sourceBranch = (0, getSourceBranchFromCommits_1.getSourceBranchFromCommits)(commits);
    const labels = commits
        .flatMap((c) => {
        const targetPullRequest = c.targetPullRequestStates.find((pr) => pr.branch === targetBranch);
        if (!targetPullRequest?.labelRegex) {
            logger_1.logger.info('Missing labelRegex for target pull request');
            // remove dynamic labels like `$1` in interactive mode
            return targetPRLabels.filter((l) => {
                return l.match(/\$\d/) === null || !interactive;
            });
        }
        const regex = new RegExp(targetPullRequest.labelRegex);
        return targetPRLabels.map((targetPRLabel) => {
            return targetPullRequest.label?.replace(regex, targetPRLabel);
        });
    })
        .filter(filterEmpty_1.filterNil)
        .map((label) => {
        return label
            .replaceAll('{targetBranch}', targetBranch)
            .replaceAll('{sourceBranch}', sourceBranch);
    });
    return (0, lodash_1.uniq)(labels);
}
exports.getTargetPRLabels = getTargetPRLabels;
//# sourceMappingURL=getTargetPRLabels.js.map