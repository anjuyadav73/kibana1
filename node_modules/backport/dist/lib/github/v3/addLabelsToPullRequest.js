"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addLabelsToPullRequest = void 0;
const rest_1 = require("@octokit/rest");
const elastic_apm_node_1 = __importDefault(require("elastic-apm-node"));
const ora_1 = require("../../../lib/ora");
const logger_1 = require("../../logger");
async function addLabelsToPullRequest({ githubApiBaseUrlV3, repoName, repoOwner, accessToken, interactive, dryRun, pullNumber, labels, }) {
    const text = `Adding labels: ${labels.join(', ')}`;
    logger_1.logger.info(text);
    const spinner = (0, ora_1.ora)(interactive, text).start();
    if (dryRun) {
        spinner.succeed();
        return;
    }
    const span = elastic_apm_node_1.default.startSpan('REST: Add labels');
    try {
        const octokit = new rest_1.Octokit({
            auth: accessToken,
            baseUrl: githubApiBaseUrlV3,
            log: logger_1.logger,
        });
        await octokit.issues.addLabels({
            owner: repoOwner,
            repo: repoName,
            issue_number: pullNumber,
            labels,
        });
        spinner.succeed();
    }
    catch (e) {
        spinner.fail();
        logger_1.logger.error(`Could not add labels to PR ${pullNumber}`, e);
    }
    finally {
        span?.end();
    }
}
exports.addLabelsToPullRequest = addLabelsToPullRequest;
//# sourceMappingURL=addLabelsToPullRequest.js.map