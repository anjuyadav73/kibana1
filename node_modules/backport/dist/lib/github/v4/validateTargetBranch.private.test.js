"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const getDevAccessToken_1 = require("../../../test/private/getDevAccessToken");
const validateTargetBranch_1 = require("./validateTargetBranch");
const accessToken = (0, getDevAccessToken_1.getDevAccessToken)();
describe('validateTargetBranch', () => {
    it('throws when branch is invalid', async () => {
        const options = {
            repoOwner: 'backport-org',
            repoName: 'repo-with-target-branches',
            accessToken,
        };
        await expect(() => (0, validateTargetBranch_1.validateTargetBranch)({ ...options, branchName: 'foo' })).rejects.toThrow('The branch "foo" does not exist');
    });
    it('resolves when branch is valid', async () => {
        const options = {
            repoOwner: 'backport-org',
            repoName: 'repo-with-target-branches',
            accessToken,
        };
        expect(await (0, validateTargetBranch_1.validateTargetBranch)({ ...options, branchName: 'production' })).toEqual(undefined);
    });
});
//# sourceMappingURL=validateTargetBranch.private.test.js.map