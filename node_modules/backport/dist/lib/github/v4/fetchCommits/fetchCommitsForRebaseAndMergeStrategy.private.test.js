"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const getDevAccessToken_1 = require("../../../../test/private/getDevAccessToken");
const fetchCommitsForRebaseAndMergeStrategy_1 = require("./fetchCommitsForRebaseAndMergeStrategy");
const accessToken = (0, getDevAccessToken_1.getDevAccessToken)();
describe('fetchCommitsForRebaseAndMergeStrategy', () => {
    it('returns multiple commits for pull requests merged with "Rebase and merge" strategy', async () => {
        const commitsTotalCount = 3;
        const commits = await (0, fetchCommitsForRebaseAndMergeStrategy_1.fetchCommitsForRebaseAndMergeStrategy)({
            accessToken,
            repoOwner: 'backport-org',
            repoName: 'different-merge-strategies',
            pullNumber: 21,
            sourceBranch: 'main',
        }, commitsTotalCount);
        expect(commits?.length).toBe(3);
    });
    it('returns `undefined` for pull request merged with "merge strategy"', async () => {
        const commitsTotalCount = 8;
        const commits = await (0, fetchCommitsForRebaseAndMergeStrategy_1.fetchCommitsForRebaseAndMergeStrategy)({
            accessToken,
            repoOwner: 'backport-org',
            repoName: 'different-merge-strategies',
            pullNumber: 9,
            sourceBranch: 'main',
        }, commitsTotalCount);
        expect(commits).toBe(undefined);
    });
});
//# sourceMappingURL=fetchCommitsForRebaseAndMergeStrategy.private.test.js.map